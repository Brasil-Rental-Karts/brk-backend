import { MigrationInterface, QueryRunner } from "typeorm";

export class AddPaymentMethodsToPaymentConditions1751974931682 implements MigrationInterface {
    name = 'AddPaymentMethodsToPaymentConditions1751974931682'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "Regulations" DROP CONSTRAINT "FK_Regulations_Seasons_seasonId"`);
        await queryRunner.query(`ALTER TABLE "SeasonRegistrationStages" DROP CONSTRAINT "FK_SeasonRegistrationStages_Stages_stageId"`);
        await queryRunner.query(`ALTER TABLE "SeasonRegistrationStages" DROP CONSTRAINT "FK_SeasonRegistrationStages_SeasonRegistrations_registrationId"`);
        await queryRunner.query(`ALTER TABLE "lap_times" DROP CONSTRAINT "FK_22985ace19e29e685b346fecef3"`);
        await queryRunner.query(`ALTER TABLE "lap_times" DROP CONSTRAINT "FK_4f33746f22d56825ff490229ece"`);
        await queryRunner.query(`ALTER TABLE "lap_times" DROP CONSTRAINT "FK_14433f368bbfaa3fab701c77fe4"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP CONSTRAINT "FK_ChampionshipClassification_Championship"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP CONSTRAINT "FK_ChampionshipClassification_Season"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP CONSTRAINT "FK_ChampionshipClassification_Category"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP CONSTRAINT "FK_ChampionshipClassification_User"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_Regulations_seasonId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_Regulations_order"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_Regulations_isActive"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_Regulations_seasonId_order"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_RaceTracks_name"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_RaceTracks_city"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_RaceTracks_state"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_RaceTracks_isActive"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_SeasonRegistrationStages_registrationId_stageId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_SeasonRegistrationStages_registrationId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_SeasonRegistrationStages_stageId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_LAP_TIMES_USER_STAGE"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_LAP_TIMES_STAGE"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ChampionshipStaff_permissions"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_CREDIT_CARD_FEES_CHAMPIONSHIP"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_CREDIT_CARD_FEES_ACTIVE"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ChampionshipClassification_Season_Category"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ChampionshipClassification_Championship_Category"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ChampionshipClassification_User_Championship"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ChampionshipClassification_TotalPoints"`);
        await queryRunner.query(`ALTER TABLE "Categories" DROP CONSTRAINT "CHK_Categories_discardingType"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP CONSTRAINT "UQ_ChampionshipClassification_User_Category_Season"`);
        await queryRunner.query(`ALTER TABLE "Regulations" DROP COLUMN "isActive"`);
        await queryRunner.query(`COMMENT ON COLUMN "Championships"."commissionAbsorbedByChampionship" IS NULL`);
        await queryRunner.query(`ALTER TABLE "Categories" DROP COLUMN "discardingType"`);
        await queryRunner.query(`CREATE TYPE "public"."Categories_discardingtype_enum" AS ENUM('bateria', 'etapa')`);
        await queryRunner.query(`ALTER TABLE "Categories" ADD "discardingType" "public"."Categories_discardingtype_enum"`);
        await queryRunner.query(`COMMENT ON COLUMN "Seasons"."registrationOpen" IS NULL`);
        await queryRunner.query(`ALTER TYPE "public"."Seasons_inscriptiontype_enum" RENAME TO "Seasons_inscriptiontype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."Seasons_inscriptiontype_enum" AS ENUM('por_temporada', 'por_etapa')`);
        await queryRunner.query(`ALTER TABLE "Seasons" ALTER COLUMN "inscriptionType" TYPE "public"."Seasons_inscriptiontype_enum" USING "inscriptionType"::"text"::"public"."Seasons_inscriptiontype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."Seasons_inscriptiontype_enum_old"`);
        await queryRunner.query(`ALTER TABLE "Seasons" ALTER COLUMN "paymentMethods" DROP DEFAULT`);
        await queryRunner.query(`COMMENT ON COLUMN "Seasons"."pixInstallments" IS NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "Seasons"."creditCardInstallments" IS NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "RaceTracks"."trackLayouts" IS NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "RaceTracks"."defaultFleets" IS NULL`);
        await queryRunner.query(`ALTER TABLE "Stages" ALTER COLUMN "raceTrackId" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "Stages" DROP COLUMN "trackLayoutId"`);
        await queryRunner.query(`ALTER TABLE "Stages" ADD "trackLayoutId" character varying`);
        await queryRunner.query(`ALTER TABLE "AsaasPayments" DROP COLUMN "dueDate"`);
        await queryRunner.query(`ALTER TABLE "AsaasPayments" ADD "dueDate" character varying(10) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "ChampionshipStaff" ALTER COLUMN "permissions" SET DEFAULT '{}'::jsonb`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" ALTER COLUMN "fixedFee" SET DEFAULT '0.49'`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP COLUMN "lastCalculatedAt"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD "lastCalculatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_08461d7857f75137f6ce9899c2" ON "SeasonRegistrationStages" ("registrationId", "stageId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_300f95a525bd3cf8eebe62a02b" ON "lap_times" ("userId", "stageId", "categoryId", "batteryIndex") `);
        await queryRunner.query(`CREATE INDEX "IDX_5e81fac62bd28b0596df82a5ca" ON "CreditCardFees" ("isActive") `);
        await queryRunner.query(`CREATE INDEX "IDX_4a153b30cf939110cbafed0ab7" ON "CreditCardFees" ("championshipId") `);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD CONSTRAINT "UQ_5c6670962d19891d4284c55de99" UNIQUE ("userId", "categoryId", "seasonId")`);
        await queryRunner.query(`ALTER TABLE "Regulations" ADD CONSTRAINT "FK_6c46de3182690ee66fdf7aa1891" FOREIGN KEY ("seasonId") REFERENCES "Seasons"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Stages" ADD CONSTRAINT "FK_33ad1174d8c6efda30c322bebc8" FOREIGN KEY ("raceTrackId") REFERENCES "RaceTracks"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "SeasonRegistrationStages" ADD CONSTRAINT "FK_47aa1b60b5e518515a4ab688d9b" FOREIGN KEY ("registrationId") REFERENCES "SeasonRegistrations"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "SeasonRegistrationStages" ADD CONSTRAINT "FK_9f16a5062bc22cce7c71c146b3e" FOREIGN KEY ("stageId") REFERENCES "Stages"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lap_times" ADD CONSTRAINT "FK_14433f368bbfaa3fab701c77fe4" FOREIGN KEY ("userId") REFERENCES "Users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lap_times" ADD CONSTRAINT "FK_4f33746f22d56825ff490229ece" FOREIGN KEY ("stageId") REFERENCES "Stages"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lap_times" ADD CONSTRAINT "FK_22985ace19e29e685b346fecef3" FOREIGN KEY ("categoryId") REFERENCES "Categories"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" ADD CONSTRAINT "FK_4a153b30cf939110cbafed0ab77" FOREIGN KEY ("championshipId") REFERENCES "Championships"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD CONSTRAINT "FK_7e318a719cfa8a7f47029a1897c" FOREIGN KEY ("userId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD CONSTRAINT "FK_72eae659d2f20d9ec9ae3679360" FOREIGN KEY ("categoryId") REFERENCES "Categories"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD CONSTRAINT "FK_707fb568bb15ead4eaf5ec258bc" FOREIGN KEY ("seasonId") REFERENCES "Seasons"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD CONSTRAINT "FK_65b46177449454f89512ae3938f" FOREIGN KEY ("championshipId") REFERENCES "Championships"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP CONSTRAINT "FK_65b46177449454f89512ae3938f"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP CONSTRAINT "FK_707fb568bb15ead4eaf5ec258bc"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP CONSTRAINT "FK_72eae659d2f20d9ec9ae3679360"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP CONSTRAINT "FK_7e318a719cfa8a7f47029a1897c"`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" DROP CONSTRAINT "FK_4a153b30cf939110cbafed0ab77"`);
        await queryRunner.query(`ALTER TABLE "lap_times" DROP CONSTRAINT "FK_22985ace19e29e685b346fecef3"`);
        await queryRunner.query(`ALTER TABLE "lap_times" DROP CONSTRAINT "FK_4f33746f22d56825ff490229ece"`);
        await queryRunner.query(`ALTER TABLE "lap_times" DROP CONSTRAINT "FK_14433f368bbfaa3fab701c77fe4"`);
        await queryRunner.query(`ALTER TABLE "SeasonRegistrationStages" DROP CONSTRAINT "FK_9f16a5062bc22cce7c71c146b3e"`);
        await queryRunner.query(`ALTER TABLE "SeasonRegistrationStages" DROP CONSTRAINT "FK_47aa1b60b5e518515a4ab688d9b"`);
        await queryRunner.query(`ALTER TABLE "Stages" DROP CONSTRAINT "FK_33ad1174d8c6efda30c322bebc8"`);
        await queryRunner.query(`ALTER TABLE "Regulations" DROP CONSTRAINT "FK_6c46de3182690ee66fdf7aa1891"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP CONSTRAINT "UQ_5c6670962d19891d4284c55de99"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4a153b30cf939110cbafed0ab7"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5e81fac62bd28b0596df82a5ca"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_300f95a525bd3cf8eebe62a02b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_08461d7857f75137f6ce9899c2"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP COLUMN "lastCalculatedAt"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD "lastCalculatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" ALTER COLUMN "fixedFee" SET DEFAULT 0.49`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" ADD "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "CreditCardFees" ADD "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "ChampionshipStaff" ALTER COLUMN "permissions" SET DEFAULT '{}'`);
        await queryRunner.query(`ALTER TABLE "AsaasPayments" DROP COLUMN "dueDate"`);
        await queryRunner.query(`ALTER TABLE "AsaasPayments" ADD "dueDate" date NOT NULL`);
        await queryRunner.query(`ALTER TABLE "Stages" DROP COLUMN "trackLayoutId"`);
        await queryRunner.query(`ALTER TABLE "Stages" ADD "trackLayoutId" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "Stages" ALTER COLUMN "raceTrackId" DROP NOT NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "RaceTracks"."defaultFleets" IS 'Array de configurações de frotas padrão disponíveis no kartódromo'`);
        await queryRunner.query(`COMMENT ON COLUMN "RaceTracks"."trackLayouts" IS 'Array de configurações de traçados disponíveis no kartódromo'`);
        await queryRunner.query(`COMMENT ON COLUMN "Seasons"."creditCardInstallments" IS 'Número máximo de parcelas para pagamento via cartão de crédito'`);
        await queryRunner.query(`COMMENT ON COLUMN "Seasons"."pixInstallments" IS 'Número máximo de parcelas para pagamento via PIX'`);
        await queryRunner.query(`ALTER TABLE "Seasons" ALTER COLUMN "paymentMethods" SET DEFAULT 'pix'`);
        await queryRunner.query(`CREATE TYPE "public"."Seasons_inscriptiontype_enum_old" AS ENUM('mensal', 'anual', 'semestral', 'trimestral', 'por_temporada', 'por_etapa')`);
        await queryRunner.query(`ALTER TABLE "Seasons" ALTER COLUMN "inscriptionType" TYPE "public"."Seasons_inscriptiontype_enum_old" USING "inscriptionType"::"text"::"public"."Seasons_inscriptiontype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."Seasons_inscriptiontype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."Seasons_inscriptiontype_enum_old" RENAME TO "Seasons_inscriptiontype_enum"`);
        await queryRunner.query(`COMMENT ON COLUMN "Seasons"."registrationOpen" IS 'Indica se as inscrições estão abertas para esta temporada'`);
        await queryRunner.query(`ALTER TABLE "Categories" DROP COLUMN "discardingType"`);
        await queryRunner.query(`DROP TYPE "public"."Categories_discardingtype_enum"`);
        await queryRunner.query(`ALTER TABLE "Categories" ADD "discardingType" character varying`);
        await queryRunner.query(`COMMENT ON COLUMN "Championships"."commissionAbsorbedByChampionship" IS 'Indica se a comissão da plataforma é absorvida pelo campeonato (true) ou cobrada do piloto (false)'`);
        await queryRunner.query(`ALTER TABLE "Regulations" ADD "isActive" boolean NOT NULL DEFAULT true`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD CONSTRAINT "UQ_ChampionshipClassification_User_Category_Season" UNIQUE ("userId", "categoryId", "seasonId")`);
        await queryRunner.query(`ALTER TABLE "Categories" ADD CONSTRAINT "CHK_Categories_discardingType" CHECK ((("discardingType")::text = ANY ((ARRAY['bateria'::character varying, 'etapa'::character varying])::text[])))`);
        await queryRunner.query(`CREATE INDEX "IDX_ChampionshipClassification_TotalPoints" ON "ChampionshipClassification" ("totalPoints") `);
        await queryRunner.query(`CREATE INDEX "IDX_ChampionshipClassification_User_Championship" ON "ChampionshipClassification" ("userId", "championshipId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ChampionshipClassification_Championship_Category" ON "ChampionshipClassification" ("categoryId", "championshipId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ChampionshipClassification_Season_Category" ON "ChampionshipClassification" ("categoryId", "seasonId") `);
        await queryRunner.query(`CREATE INDEX "IDX_CREDIT_CARD_FEES_ACTIVE" ON "CreditCardFees" ("isActive") `);
        await queryRunner.query(`CREATE INDEX "IDX_CREDIT_CARD_FEES_CHAMPIONSHIP" ON "CreditCardFees" ("championshipId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ChampionshipStaff_permissions" ON "ChampionshipStaff" ("permissions") `);
        await queryRunner.query(`CREATE INDEX "IDX_LAP_TIMES_STAGE" ON "lap_times" ("stageId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_LAP_TIMES_USER_STAGE" ON "lap_times" ("userId", "stageId", "categoryId", "batteryIndex") `);
        await queryRunner.query(`CREATE INDEX "IDX_SeasonRegistrationStages_stageId" ON "SeasonRegistrationStages" ("stageId") `);
        await queryRunner.query(`CREATE INDEX "IDX_SeasonRegistrationStages_registrationId" ON "SeasonRegistrationStages" ("registrationId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_SeasonRegistrationStages_registrationId_stageId" ON "SeasonRegistrationStages" ("registrationId", "stageId") `);
        await queryRunner.query(`CREATE INDEX "IDX_RaceTracks_isActive" ON "RaceTracks" ("isActive") `);
        await queryRunner.query(`CREATE INDEX "IDX_RaceTracks_state" ON "RaceTracks" ("state") `);
        await queryRunner.query(`CREATE INDEX "IDX_RaceTracks_city" ON "RaceTracks" ("city") `);
        await queryRunner.query(`CREATE INDEX "IDX_RaceTracks_name" ON "RaceTracks" ("name") `);
        await queryRunner.query(`CREATE INDEX "IDX_Regulations_seasonId_order" ON "Regulations" ("order", "seasonId") `);
        await queryRunner.query(`CREATE INDEX "IDX_Regulations_isActive" ON "Regulations" ("isActive") `);
        await queryRunner.query(`CREATE INDEX "IDX_Regulations_order" ON "Regulations" ("order") `);
        await queryRunner.query(`CREATE INDEX "IDX_Regulations_seasonId" ON "Regulations" ("seasonId") `);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD CONSTRAINT "FK_ChampionshipClassification_User" FOREIGN KEY ("userId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD CONSTRAINT "FK_ChampionshipClassification_Category" FOREIGN KEY ("categoryId") REFERENCES "Categories"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD CONSTRAINT "FK_ChampionshipClassification_Season" FOREIGN KEY ("seasonId") REFERENCES "Seasons"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ChampionshipClassification" ADD CONSTRAINT "FK_ChampionshipClassification_Championship" FOREIGN KEY ("championshipId") REFERENCES "Championships"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lap_times" ADD CONSTRAINT "FK_14433f368bbfaa3fab701c77fe4" FOREIGN KEY ("userId") REFERENCES "Users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lap_times" ADD CONSTRAINT "FK_4f33746f22d56825ff490229ece" FOREIGN KEY ("stageId") REFERENCES "Stages"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lap_times" ADD CONSTRAINT "FK_22985ace19e29e685b346fecef3" FOREIGN KEY ("categoryId") REFERENCES "Categories"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "SeasonRegistrationStages" ADD CONSTRAINT "FK_SeasonRegistrationStages_SeasonRegistrations_registrationId" FOREIGN KEY ("registrationId") REFERENCES "SeasonRegistrations"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "SeasonRegistrationStages" ADD CONSTRAINT "FK_SeasonRegistrationStages_Stages_stageId" FOREIGN KEY ("stageId") REFERENCES "Stages"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Regulations" ADD CONSTRAINT "FK_Regulations_Seasons_seasonId" FOREIGN KEY ("seasonId") REFERENCES "Seasons"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

}
